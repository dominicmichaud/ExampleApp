<script type="application/javascript">
  $(document).ready(function() {
    //form id
    $('form#new_user')
        .bind('ajax:success', function(evt, data, status, xhr) {
          //function called on status: 200 (for ex.)
          var elm = $('.frm-container');
          elm.removeClass('has-error').addClass('has-success').find('span.glyphicon').removeClass('glyphicon-remove').addClass('glyphicon-ok');
          $('#btn-submit').hide();
          $('.success-icon').animate({'opacity':1, 'top':'0px'},500, function () {
            setTimeout(function () {
              window.location.reload();
            }, 200);
          });
        })
        .bind("ajax:error", function(evt, xhr, status, error) {
          //function called on status: 401 or 500 (for ex.)
          if($.parseJSON(xhr.status) == '401'){
            var elm = $('.frm-container');
            elm.removeClass('has-success').addClass('has-error').find('span.glyphicon').removeClass('glyphicon-ok').addClass('glyphicon-remove');
          }
          else{
            switch($.parseJSON(xhr.responseText).target){
              case "both":
                var elm = $('.frm-container');
                elm.addClass('has-error').find('span.glyphicon').addClass('glyphicon-remove');
                break;
              case "email":
                var elm = $('.email-form');
                elm.addClass('has-error').find('span.glyphicon').addClass('glyphicon-remove');
                break;
              case "psw":
                var elm = $('.psw-form');
                elm.addClass('has-error').find('span.glyphicon').addClass('glyphicon-remove');
                break
            }
          }

          $('.notice').html($.parseJSON(xhr.responseText).message).show('fast');
        });

    $('#btn-submit').click(function (e) {
      var elm = $('input[type=email]');
      var elm_temp = elm;
      if(!isValidEmailAddress(elm.val())){
        elm = elm.parent();
        elm.removeClass('has-success').addClass('has-error').find('span.glyphicon').removeClass('glyphicon-ok').addClass('glyphicon-remove');

        if(elm_temp.val() != ""){
          $('.notice').html("Invalid email address").show('fast');
        }
        else{
          $('.notice').html("Email address can't be blank").show('fast');
        }

        return false;
      }
      else{
        var elm = $(this).parent();
        elm.removeClass('has-error').addClass('has-success').find('span.glyphicon').removeClass('glyphicon-remove').addClass('glyphicon-ok');
      }
    })

    $('.frm-container input').on('change', function(){
      if($(this).val() != ""){
        var elm = $(this).parent();
        elm.removeClass('has-error').addClass('has-success').find('span.glyphicon').removeClass('glyphicon-remove').addClass('glyphicon-ok');
      }
      $('.notice').hide('fast');
    });

    $('.frm-container input').on('focusout',function () {
      if($(this).val() != ""){
        var elm = $(this).parent();
        elm.removeClass('has-error').addClass('has-success').find('span.glyphicon').removeClass('glyphicon-remove').addClass('glyphicon-ok');
      }
      $('.notice').hide('fast');
    })
  });

  function isValidEmailAddress(emailAddress) {
    var pattern = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i);
    return pattern.test(emailAddress);
  };
</script>

<div class="success-icon">
  <i class="fa fa-check-circle-o" aria-hidden="true"></i>
</div>

<div class="hidden">
  <input type="email">
  <input type="password">
</div>

<%= simple_form_for resource, :as => resource_name, :url => session_path(resource_name), remote: true, :html => {:class => 'form-horizontal', :autocomplete => 'off'} do |f| %>
      <p class="notice"></p>

      <div class="frm-container email-form has-feedback">
        <label for="exampleInputEmail1">Email address</label>
        <%= f.email_field :email, :autofocus => false, :autocomplete => "off", class: 'form-control' %>
        <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
        <span class="sr-only">(error)</span>
      </div>

      <div class="frm-container psw-form has-feedback">
        <label for="examplePass1">Password</label>
        <%= f.password_field :password, :autofocus => false, class: 'form-control', :autocomplete => "off" %>
        <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
        <span class="sr-only">(error)</span>
      </div>

      <% if devise_mapping.rememberable? -%>
          <div class="checkbox">
            <label>
              <%= f.check_box :remember_me %> Remember me
            </label>
          </div>
      <% end -%>

      <%= f.submit "Sign in", id: 'btn-submit', :class => 'btn btn-md btn-success' %>
<% end %>

<div class="shared-links">
  <%= link_to "Forgot your password?", new_password_path(resource_name), class: "shared-link" %>
</div>